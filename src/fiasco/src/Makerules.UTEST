# -*- makefile -*-
# vi:se ft=make:

# Makerules for all unit test targets.
#
# Each unit test comes in its own kernel binary. Everything is preprocessed and
# compiled together. The linker stage adds the object file of the unit test to
# the link rule.
# All binaries are created in the utest/ directory.

# select all test_* files to generate a build target for each.
UTEST_TESTS = $(filter test_%,$(INTERFACES_UTEST))

# the final binaries go into the utest/ folder.
UTEST_BINARIES = $(addprefix utest/,$(UTEST_TESTS))

# select the utest framework files to add to each test build target.
UTEST_FRAMEWORK = $(filter utest_fw%,$(OBJ_UTEST))


# default target for the UTEST subsystem, add all test binaries as prerequisites.
utest_subsys: $(UTEST_BINARIES)

# Ensure the utest folder exists before the target is build
$(UTEST_BINARIES): | utest

# create utest folder
utest:
	@mkdir -p utest

# generate link rules for each unit test binary.
$(foreach tname,$(UTEST_TESTS),\
	$(eval $(call gen_kernel_rules,\
		utest/$(tname),\
		$(tname).debug,\
		$$(UTEST_FRAMEWORK) $$(filter $(tname)%,$$(OBJ_UTEST)))))

# generate checksum rules for each unit test binary.
ifneq ($(filter CHECKSUM,$(SUBSYSTEMS)),)
$(foreach tname,$(UTEST_TESTS),\
	$(eval $(call all_checksum_rules,\
		utest/$(tname),$(tname).debug,-$(tname))))
endif

clean-UTEST:
	rm -rf $(OBJ_UTEST)
